#include <iostream>
#include<string>
#include<vector>
using namespace std;

class Solution {
public:
    static void dfs(const string& s, const vector<string>& list, int cur, string t, vector<string>& ret) {
        if (cur == s.length()) {
            ret.push_back(t);
            return;
        }

        int idx = s[cur] - '0' - 2;//-'0'"convert char to int"
        for (char c : list[idx]) {
            cout << c << endl;
            dfs(s, list, cur + 1, t + c, ret);
        }
    }
    static vector<string> letterCombinations(string digits) {
        vector<string> list{ "abc","def","ghi","jkl","mno","pqrs","tuv","wxyz" };
        vector<string> ret;
        if (digits.empty()) return ret;
        dfs(digits, list, 0, "", ret);
        return ret;
    }
};

int main()
{
    vector<string>res = Solution::letterCombinations("2");
    for (int i = 0; i < res.size(); i++)
        cout << res[i] << ',';

    vector<int> ints = { 1,2,3 };
    for (int var : ints)
        cout << var;


    return 0;
